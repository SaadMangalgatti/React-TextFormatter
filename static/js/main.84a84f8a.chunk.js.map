{"version":3,"sources":["components/TextForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["TextForm","props","_useState","useState","_useState2","Object","slicedToArray","text","setText","react_default","a","createElement","className","heading","id","rows","value","onChange","event","target","onClick","newText","toUpperCase","toLocaleLowerCase","split","map","w","substring","toLowerCase","join","length","App","Fragment","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"mMAEe,SAASA,EAASC,GAAO,IAAAC,EACdC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA7BK,EAAIH,EAAA,GAAEI,EAAOJ,EAAA,GA4BpB,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UAAKV,EAAMY,SACXJ,EAAAC,EAAAC,cAAA,YACEC,UAAU,oBACVE,GAAG,8BACHC,KAAK,IACLC,MAAOT,EACPU,SApCa,SAACC,GACtBV,EAAQU,EAAMC,OAAOH,UAqCfP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,yBACVQ,QAtCQ,WACpB,IAAIC,EAAUd,EAAKe,cACnBd,EAAQa,KAqCG,iBAIHZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,yBACVQ,QAzCW,WACvB,IAAIC,EAAUd,EAAKgB,oBACnBf,EAAQa,KAwCG,iBAKHZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBQ,QAvCrC,WAChB,IAAIC,EAAUd,EACXiB,MAAM,KACNC,IAAI,SAACC,GAAC,OAAKA,EAAE,GAAGJ,cAAgBI,EAAEC,UAAU,GAAGC,gBAC/CC,KAAK,KACRrB,EAAQa,KAkCiE,kBAKjEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,yBACVQ,QApDU,WAEtBZ,EADc,MAoDH,gBAMLC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UAAI,qBACJF,EAAAC,EAAAC,cAAA,UACGJ,EAAKiB,MAAM,KAAKM,OAAO,cAAYvB,EAAKuB,OAAO,eAElDrB,EAAAC,EAAAC,cAAA,SAAI,KAAQJ,EAAKiB,MAAM,KAAKM,OAAO,qBAGrCrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UAAI,WACJF,EAAAC,EAAAC,cAAA,SAAIJ,OC3EDwB,MARf,WACE,OACEtB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsB,SAAA,KACEvB,EAAAC,EAAAC,cAACX,EAAQ,CAACa,QAAQ,uCCKToB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzC,EAAAC,EAAAC,cAACF,EAAAC,EAAMyC,WAAU,KACf1C,EAAAC,EAAAC,cAACyC,EAAG,QAORnB","file":"static/js/main.84a84f8a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const handleLowerClick = () => {\r\n    let newText = text.toLocaleLowerCase();\r\n    setText(newText);\r\n  };\r\n  const handlecleartext = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n  };\r\n\r\n  const TitleCase = () => {\r\n    let newText = text\r\n      .split(\" \")\r\n      .map((w) => w[0].toUpperCase() + w.substring(1).toLowerCase())\r\n      .join(\" \");\r\n    setText(newText);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-5\">\r\n      <div className=\"row\">\r\n        <div className=\"mb-3\">\r\n          <h3>{props.heading}</h3>\r\n          <textarea\r\n            className=\"form-control mb-2\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"4\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-3 d-grid gap-2\">\r\n              <button\r\n                className=\"btn btn-secondary mt-1\"\r\n                onClick={handleUpClick}\r\n              >\r\n                To Uppercase\r\n              </button>\r\n            </div>\r\n            <div className=\"col-sm-3 d-grid gap-2\">\r\n              <button\r\n                className=\"btn btn-secondary mt-1\"\r\n                onClick={handleLowerClick}\r\n              >\r\n                To Lowercase\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"col-sm-3 d-grid gap-2\">\r\n              <button className=\"btn btn-secondary mt-1\" onClick={TitleCase}>\r\n                To Capatilize\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"col-sm-3 d-grid gap-2\">\r\n              <button\r\n                className=\"btn btn-secondary mt-1\"\r\n                onClick={handlecleartext}\r\n              >\r\n                Clear Text\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"container mt-5\">\r\n            <h4>Your Text Summary</h4>\r\n            <h5>\r\n              {text.split(\" \").length} Words and {text.length} Characters\r\n            </h5>\r\n            <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n          </div>\r\n\r\n          <div className=\"container mt-4\">\r\n            <h4>Preview</h4>\r\n            <p>{text}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport React from \"react\";\nimport TextForm from \"./components/TextForm\";\n\nfunction App() {\n  return (\n    <>\n      <TextForm heading=\"Enter The Text Below To Analyze \" />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}